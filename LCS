import java.util.Scanner;

class C{
   int v;
   char d;

   C(){
       v = 0;
       d = 'h';
   }
}
public class Lcs {
   public static void findlcs(String a , String b){
       int m = a.length();
       int n = b.length();
        D[][]cost = new D[m+1][n+1];
        for(int i =0 ; i<=m ; i++){
            for(int j = 0 ; j<= n ;j++){
                cost[i][j] = new D();
            }
        }
        for(int i = 1; i<=m ; i++){
            for(int j = 1; j<=n ; j++){
                if(a.charAt(i-1) == b.charAt(j-1)){
                    cost[i][j].v = cost[i-1][j-1].v+1;
                    cost[i][j].d = 'd';
                }
                else {
                    if (cost[i - 1][j].v >= cost[i][j - 1].v) {
                        cost[i][j].v = cost[i - 1][j].v;
                        cost[i][j].d = 'u';
                    } else {
                        cost[i][j].v = cost[i][j - 1].v;
                        cost[i][j].d = 's';
                    }
                }
            }
        }
       System.out.println("LONGEST COMMON SUBSEQUENCE IS:- ");
        Printlcs(m , n , cost , a);
       System.out.println();
       System.out.println("LENGHT OF THE LCS IS:- "+cost[m][n].v);
   }
   public static void Printlcs(int i , int j , D[][]cost , String a){
       if(i == 0 || j==0){
           return;
       }
       else{
           if(cost[i][j].d == 'd'){
               Printlcs(i-1 , j-1 , cost , a);
               System.out.print(a.charAt(i-1));
           } else if (cost[i][j].d == 'u') {
               Printlcs(i-1 , j , cost , a);
           }
           else{
               Printlcs(i , j-1 , cost , a);
           }
       }
   }

   public static void main(String[] args) {
       Scanner S = new Scanner(System.in);
       System.out.println("ENTER STRING 1:- ");
       String a = S.next();
       System.out.println("ENTER STRING 2:- ");
       String b = S.next();

       findlcs(a,b);
   }
}
